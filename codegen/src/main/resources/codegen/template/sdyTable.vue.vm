<template>

  <div class="pubOut3rightTableRowOutF pubOut3rightTableRowOutFAuto" style="height: calc(100% - 45px);">
    <el-row class="pubOut3rightTableRow" style="height: calc(100%);">
      <el-table height="100%" v-loading="loading" stripe :data="tableData" tooltip-effect="dark" @selection-change="handleSelectionChange">
        <el-table-column fixed="left" type="selection" width="30" align='center'></el-table-column>
        <el-table-column fixed="left" label="行号" type="index" width="50" align='center'></el-table-column>

        <el-table-column v-for="(item, index) in option" :key="index" :label="item.label" :width="item.width" :prop="item.prop"
          align='center' show-overflow-tooltip>
        </el-table-column>

        <slot></slot>

      </el-table>

    </el-row>
    <el-row class="pubPagination" style="margin-top: 0;padding-bottom: 10px;">
      <el-pagination background @size-change="handleSizeChange2" @current-change="handleCurrentChange2"
        :current-page.sync="currentPage2" :page-sizes="pageSizes2" :page-size="10" layout="total, sizes, prev, pager, next"
        :total="totals2"></el-pagination>
    </el-row>


  </div>

</template>

<script>
  export default {
    props: {

      option: {
        type: Array,
        default: () => {
          return []
        }
      },
      tableDataPost: {

      },
      tableDataPostParam: {
        type: Object,
        default: () => {
          return {}
        }
      },
    },
    data() {
      return {
        tableData: [],
        loading: false,
        currentPage2: 1,
        totals2: 0,
        pageSize2: 10,
        pageSizes2: [5, 10, 20, 50, 100],
      }
    },
    created() {

    },
    methods: {
      search() {
        this.currentPage2 = 1;
        this.querySel2(1, this.pageSize2);
      },
      handleSelectionChange(val) {
        this.$emit('selection-change', val);
      },
      handleSelectionChange2(val) {
        //console.log(val)
        this.multipleSelection = val;

      },
      handleSizeChange2(val) {
        //console.log(`每页 ${val} 条`);
        this.pageSize2 = val;
        this.currentPage2 = 1;
        this.querySel2(1, val);
      },
      handleCurrentChange2(val) {
        //console.log(`当前页: ${val}`);
        this.querySel2(val, this.pageSize2);
      },
      querySel2(start, longs) { //start 表示后台的第几页
        this.loading = true;
        this.tableDataPost({
          current: start,
          size: longs,
          param: this.tableDataPostParam
        }).then(data => {
          console.log(data)
          if (data.data.code == '0') {

            this.tableData = data.data.data.records;
            this.totals2 = data.data.data.total;
            if (longs == '10') {
              this.pageSize2 = 10;
            }
          }
          this.loading = false;
          //this.$message(data.data.msg);
        });
      },
    }
  }
</script>

<style scoped>

</style>
